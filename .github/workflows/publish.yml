name: sleeper-publisher

on:
  workflow_dispatch:
    inputs:
      season:
        description: "Season"
        required: false
        default: "2025"
      week:
        description: "Week (1-18)"
        required: false
        default: "6"
      lookback_hours:
        description: "Trending lookback hours"
        required: false
        default: "24"
      news_feeds:
        description: "CSV of RSS feeds"
        required: false
        default: "https://www.espn.com/espn/rss/nfl/news,https://www.rotowire.com/rss/football.php"
  schedule:
    - cron: "0 * * * *"   # hourly

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      # inputs (may be empty on schedules)
      SEASON_INPUT: ${{ inputs.season }}
      WEEK_INPUT: ${{ inputs.week }}
      LOOKBACK_INPUT: ${{ inputs.lookback_hours }}
      NEWS_FEEDS_INPUT: ${{ inputs.news_feeds }}
      # your league
      SLEEPER_LEAGUE_ID: "1262790170931892224"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # ---- PRE-FLIGHT (simple & robust; no heredoc) ----
      - name: Preflight (env + Sleeper state)
        env:
          LEAGUE: ${{ env.SLEEPER_LEAGUE_ID }}
        run: |
          # no -u here; we'll source vars after writing them
          set -eo pipefail
          echo "Inputs: season='${SEASON_INPUT:-}', week='${WEEK_INPUT:-}'"
          echo "Fetching Sleeper state..."
          curl -fsS https://api.sleeper.app/v1/state/nfl -o state.json

          # Compute effective season/week and publish to GITHUB_ENV for later steps
          python -c "import json,os; d=json.load(open('state.json')); \
            live_season=str(d.get('season','')); live_week=str(d.get('week','')); \
            season=os.environ.get('SEASON_INPUT') or live_season; \
            week=os.environ.get('WEEK_INPUT') or live_week; \
            print(f'EFFECTIVE_SEASON={season}'); print(f'EFFECTIVE_WEEK={week}'); \
            open(os.environ['GITHUB_ENV'],'a').write(f'EFFECTIVE_SEASON={season}\\nEFFECTIVE_WEEK={week}\\n')"

          # Load them into THIS shell too
          source "$GITHUB_ENV"

          echo "Checking endpoints for league=${LEAGUE}, week=${EFFECTIVE_WEEK}..."
          for url in \
            "https://api.sleeper.app/v1/league/${LEAGUE}" \
            "https://api.sleeper.app/v1/league/${LEAGUE}/rosters" \
            "https://api.sleeper.app/v1/league/${LEAGUE}/users" \
            "https://api.sleeper.app/v1/league/${LEAGUE}/matchups/${EFFECTIVE_WEEK}" \
            "https://api.sleeper.app/v1/league/${LEAGUE}/transactions/${EFFECTIVE_WEEK}" \
            "https://api.sleeper.app/v1/stats/nfl/${EFFECTIVE_SEASON}/${EFFECTIVE_WEEK}?season_type=regular"
          do
            echo "GET $url"
            curl -fsS "$url" >/dev/null
          done
          echo "Preflight OK âœ…"


      - run: pip install -r requirements.txt

      - name: Weekly league publish (baseline)
        env:
          SLEEPER_LEAGUE_ID: ${{ env.SLEEPER_LEAGUE_ID }}
          SEASON: ${{ env.SEASON_INPUT || env.EFFECTIVE_SEASON || '2025' }}
          WEEK:   ${{ env.WEEK_INPUT   || env.EFFECTIVE_WEEK   || '6' }}
          TRENDING_LOOKBACK_H: ${{ env.LOOKBACK_INPUT || '24' }}
          TRENDING_LIMIT: "100"
        run: python scripts/sleeper_publish.py

      - name: Build stats, usage, SOS
        env:
          SLEEPER_LEAGUE_ID: ${{ env.SLEEPER_LEAGUE_ID }}
          SEASON: ${{ env.SEASON_INPUT || env.EFFECTIVE_SEASON || '2025' }}
          WEEK:   ${{ env.WEEK_INPUT   || env.EFFECTIVE_WEEK   || '6' }}
        run: python scripts/build_stats_and_usage.py

      - name: Build full season transactions
        env:
          SLEEPER_LEAGUE_ID: ${{ env.SLEEPER_LEAGUE_ID }}
          SEASON: ${{ env.SEASON_INPUT || env.EFFECTIVE_SEASON || '2025' }}
          MAX_WEEK: "18"
        run: python scripts/transactions_history.py

      - name: Fetch news
        env:
          NEWS_FEEDS: ${{ env.NEWS_FEEDS_INPUT || 'https://www.espn.com/espn/rss/nfl/news,https://www.rotowire.com/rss/football.php' }}
        run: python scripts/news_fetch.py

      - name: Import projections CSV (optional)
        env:
          SEASON: ${{ env.SEASON_INPUT || env.EFFECTIVE_SEASON || '2025' }}
        run: python scripts/projections_import.py || true

      - name: Build trade values (basic)
        env:
          SEASON: ${{ env.SEASON_INPUT || env.EFFECTIVE_SEASON || '2025' }}
        run: python scripts/trade_values.py

      - name: Commit & push all data
        run: |
          git config user.name "data-bot"
          git config user.email "bot@users.noreply.github.com"
          git add -A
          git commit -m "publish season ${{ env.SEASON_INPUT || env.EFFECTIVE_SEASON || '2025' }} week ${{ env.WEEK_INPUT || env.EFFECTIVE_WEEK || '6' }} (stats/usage/sos/news/tx history/value)" || echo "no changes"
          git push




